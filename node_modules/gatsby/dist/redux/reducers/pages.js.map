{"version":3,"sources":["../../../src/redux/reducers/pages.js"],"names":["normalize","require","stateToMap","state","stateMap","Map","forEach","payload","set","path","module","exports","action","type","component","plugin","name","console","log","error","JSON","stringify","Error","pluginCreator___NODE","id","pluginCreatorId","Array","from","values","delete"],"mappings":";;AAAA,MAAMA,YAAYC,QAAS,gBAAT,CAAlB;;AAEA,MAAMC,aAAaC,SAAS;AAC1B,MAAIC,WAAW,IAAIC,GAAJ,EAAf;AACAF,QAAMG,OAAN,CAAcC,WAAWH,SAASI,GAAT,CAAaD,QAAQE,IAArB,EAA2BF,OAA3B,CAAzB;AACA,SAAOH,QAAP;AACD,CAJD;;AAMAM,OAAOC,OAAP,GAAiB,CAACR,QAAQ,EAAT,EAAaS,MAAb,KAAwB;AACvC,UAAQA,OAAOC,IAAf;AACE,SAAM,cAAN;AACE,aAAO,EAAP;;AACF,SAAM,aAAN;AAAoB;AAClBD,eAAOL,OAAP,CAAeO,SAAf,GAA2Bd,UAAUY,OAAOL,OAAP,CAAeO,SAAzB,CAA3B;;AACA,YAAI,CAACF,OAAOG,MAAR,IAAkB,CAACH,OAAOG,MAAP,CAAcC,IAArC,EAA2C;AACzCC,kBAAQC,GAAR,CAAa,EAAb;AACAD,kBAAQE,KAAR,CAAcC,KAAKC,SAAL,CAAeT,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAd;AACAK,kBAAQC,GAAR,CAAa,EAAb;AACA,gBAAM,IAAII,KAAJ,CACH;iCADG,CAAN;AAID,SAViB,CAWlB;;;AACAV,eAAOL,OAAP,CAAegB,oBAAf,GAAsCX,OAAOG,MAAP,CAAcS,EAApD;AACAZ,eAAOL,OAAP,CAAekB,eAAf,GAAiCb,OAAOG,MAAP,CAAcS,EAA/C;AAEA,YAAIpB,WAAWF,WAAWC,KAAX,CAAf;AACAC,iBAASI,GAAT,CAAaI,OAAOL,OAAP,CAAeE,IAA5B,EAAkCG,OAAOL,OAAzC;AACA,eAAOmB,MAAMC,IAAN,CAAWvB,SAASwB,MAAT,EAAX,CAAP;AACD;;AACD,SAAM,aAAN;AAAoB;AAClB,YAAIxB,WAAWF,WAAWC,KAAX,CAAf;AACAC,iBAASyB,MAAT,CAAgBjB,OAAOL,OAAP,CAAeE,IAA/B;AACA,eAAOiB,MAAMC,IAAN,CAAWvB,SAASwB,MAAT,EAAX,CAAP;AACD;;AACD;AACE,aAAOzB,KAAP;AA5BJ;AA8BD,CA/BD","sourcesContent":["const normalize = require(`normalize-path`)\n\nconst stateToMap = state => {\n  let stateMap = new Map()\n  state.forEach(payload => stateMap.set(payload.path, payload))\n  return stateMap\n}\n\nmodule.exports = (state = [], action) => {\n  switch (action.type) {\n    case `DELETE_CACHE`:\n      return []\n    case `CREATE_PAGE`: {\n      action.payload.component = normalize(action.payload.component)\n      if (!action.plugin && !action.plugin.name) {\n        console.log(``)\n        console.error(JSON.stringify(action, null, 4))\n        console.log(``)\n        throw new Error(\n          `Pages can only be created by plugins. There wasn't a plugin set\n        when creating this page.`\n        )\n      }\n      // Link page to its plugin.\n      action.payload.pluginCreator___NODE = action.plugin.id\n      action.payload.pluginCreatorId = action.plugin.id\n\n      let stateMap = stateToMap(state)\n      stateMap.set(action.payload.path, action.payload)\n      return Array.from(stateMap.values())\n    }\n    case `DELETE_PAGE`: {\n      let stateMap = stateToMap(state)\n      stateMap.delete(action.payload.path)\n      return Array.from(stateMap.values())\n    }\n    default:\n      return state\n  }\n}\n"],"file":"pages.js"}