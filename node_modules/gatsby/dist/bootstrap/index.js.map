{"version":3,"sources":["../../src/bootstrap/index.js"],"names":["_","require","slash","fs","md5File","crypto","del","path","apiRunnerNode","graphql","store","emitter","loadPlugins","initCache","report","getConfigFile","process","on","reason","p","panic","extractQueries","runQueries","writePages","writeRedirects","preferDefault","m","default","module","exports","args","program","directory","dispatch","type","payload","activity","activityTimer","start","config","polyfill","warn","end","flattenedPlugins","pluginVersions","map","version","hashes","Promise","all","resolve","catch","pluginsHash","createHash","update","JSON","stringify","concat","digest","state","getState","oldPluginsHash","status","PLUGINS_HASH","info","stripIndent","remove","e","error","ensureDirSync","srcDir","__dirname","siteDir","tryRequire","copy","clobber","emptyDir","err","hasAPIFile","env","plugin","skipSSR","undefined","envAPIs","Array","isArray","length","join","ssrPlugins","filter","options","pluginOptions","browserPlugins","browserPluginsRequires","browserAPIRunner","sSRAPIRunner","readFileSync","ssrPluginsRequires","writeFileSync","extensions","apiResults","traceId","flattenDeep","graphqlRunner","query","context","schema","waitForCascadingActions","printConflicts","NODE_ENV","checkJobsDone","debounce","jobs","active","log","uptime","then","emit"],"mappings":"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","sourcesContent":["/* @flow */\n\nconst _ = require(`lodash`)\nconst slash = require(`slash`)\nconst fs = require(`fs-extra`)\nconst md5File = require(`md5-file/promise`)\nconst crypto = require(`crypto`)\nconst del = require(`del`)\nconst path = require(`path`)\n\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nconst { graphql } = require(`graphql`)\nconst { store, emitter } = require(`../redux`)\nconst loadPlugins = require(`./load-plugins`)\nconst { initCache } = require(`../utils/cache`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst getConfigFile = require(`./get-config-file`)\n\n// Show stack trace on unhandled promises.\nprocess.on(`unhandledRejection`, (reason, p) => {\n  report.panic(reason)\n})\n\nconst {\n  extractQueries,\n} = require(`../internal-plugins/query-runner/query-watcher`)\nconst {\n  runQueries,\n} = require(`../internal-plugins/query-runner/page-query-runner`)\nconst { writePages } = require(`../internal-plugins/query-runner/pages-writer`)\nconst {\n  writeRedirects,\n} = require(`../internal-plugins/query-runner/redirects-writer`)\n\n// Override console.log to add the source file + line number.\n// Useful for debugging if you lose a console.log somewhere.\n// Otherwise leave commented out.\n// require(`./log-line-function`)\n\nconst preferDefault = m => (m && m.default) || m\n\ntype BootstrapArgs = {\n  directory: string,\n  prefixPaths?: boolean,\n}\n\nmodule.exports = async (args: BootstrapArgs) => {\n  const program = {\n    ...args,\n    // Fix program directory path for windows env.\n    directory: slash(args.directory),\n  }\n\n  store.dispatch({\n    type: `SET_PROGRAM`,\n    payload: program,\n  })\n\n  // Try opening the site's gatsby-config.js file.\n  let activity = report.activityTimer(`open and validate gatsby-config`)\n  activity.start()\n  const config = await preferDefault(\n    getConfigFile(program.directory, `gatsby-config`)\n  )\n\n  if (config && config.polyfill) {\n    report.warn(\n      `Support for custom Promise polyfills has been removed in Gatsby v2. We only support Babel 7's new automatic polyfilling behavior.`\n    )\n  }\n\n  store.dispatch({\n    type: `SET_SITE_CONFIG`,\n    payload: config,\n  })\n\n  activity.end()\n\n  const flattenedPlugins = await loadPlugins(config)\n\n  // onPreBootstrap\n  activity = report.activityTimer(`onPreBootstrap`)\n  activity.start()\n  await apiRunnerNode(`onPreBootstrap`)\n  activity.end()\n\n  // Delete html and css files from the public directory as we don't want\n  // deleted pages and styles from previous builds to stick around.\n  activity = report.activityTimer(\n    `delete html and css files from previous builds`\n  )\n  activity.start()\n  await del([\n    `public/*.{html,css}`,\n    `public/**/*.{html,css}`,\n    `!public/static`,\n    `!public/static/**/*.{html,css}`,\n  ])\n  activity.end()\n\n  // Check if any plugins have been updated since our last run. If so\n  // we delete the cache is there's likely been changes\n  // since the previous run.\n  //\n  // We do this by creating a hash of all the version numbers of installed\n  // plugins, the site's package.json, gatsby-config.js, and gatsby-node.js.\n  // The last, gatsby-node.js, is important as many gatsby sites put important\n  // logic in there e.g. generating slugs for custom pages.\n  const pluginVersions = flattenedPlugins.map(p => p.version)\n  const hashes = await Promise.all([\n    md5File(`package.json`),\n    Promise.resolve(\n      md5File(`${program.directory}/gatsby-config.js`).catch(() => {})\n    ), // ignore as this file isn't required),\n    Promise.resolve(\n      md5File(`${program.directory}/gatsby-node.js`).catch(() => {})\n    ), // ignore as this file isn't required),\n  ])\n  const pluginsHash = crypto\n    .createHash(`md5`)\n    .update(JSON.stringify(pluginVersions.concat(hashes)))\n    .digest(`hex`)\n  let state = store.getState()\n  const oldPluginsHash = state && state.status ? state.status.PLUGINS_HASH : ``\n\n  // Check if anything has changed. If it has, delete the site's .cache\n  // directory and tell reducers to empty themselves.\n  //\n  // Also if the hash isn't there, then delete things just in case something\n  // is weird.\n  if (oldPluginsHash && pluginsHash !== oldPluginsHash) {\n    report.info(report.stripIndent`\n      One or more of your plugins have changed since the last time you ran Gatsby. As\n      a precaution, we're deleting your site's cache to ensure there's not any stale\n      data\n    `)\n  }\n\n  if (!oldPluginsHash || pluginsHash !== oldPluginsHash) {\n    try {\n      await fs.remove(`${program.directory}/.cache`)\n    } catch (e) {\n      report.error(`Failed to remove .cache files.`, e)\n    }\n    // Tell reducers to delete their data (the store will already have\n    // been loaded from the file system cache).\n    store.dispatch({\n      type: `DELETE_CACHE`,\n    })\n  }\n\n  // Update the store with the new plugins hash.\n  store.dispatch({\n    type: `UPDATE_PLUGINS_HASH`,\n    payload: pluginsHash,\n  })\n\n  // Now that we know the .cache directory is safe, initialize the cache\n  // directory.\n  initCache()\n\n  // Ensure the public/static directory is created.\n  await fs.ensureDirSync(`${program.directory}/public/static/d`)\n\n  // Copy our site files to the root of the site.\n  activity = report.activityTimer(`copy gatsby files`)\n  activity.start()\n  const srcDir = `${__dirname}/../../cache-dir`\n  const siteDir = `${program.directory}/.cache`\n  const tryRequire = `${__dirname}/../utils/test-require-error.js`\n  try {\n    await fs.copy(srcDir, siteDir, { clobber: true })\n    await fs.copy(tryRequire, `${siteDir}/test-require-error.js`, {\n      clobber: true,\n    })\n    await fs.ensureDirSync(`${program.directory}/.cache/json`)\n\n    // Ensure .cache/fragments exists and is empty. We want fragments to be\n    // added on every run in response to data as fragments can only be added if\n    // the data used to create the schema they're dependent on is available.\n    await fs.emptyDir(`${program.directory}/.cache/fragments`)\n  } catch (err) {\n    report.panic(`Unable to copy site files to .cache`, err)\n  }\n\n  // Find plugins which implement gatsby-browser and gatsby-ssr and write\n  // out api-runners for them.\n  const hasAPIFile = (env, plugin) => {\n    // The plugin loader has disabled SSR APIs for this plugin. Usually due to\n    // multiple implementations of an API that can only be implemented once\n    if (env === `ssr` && plugin.skipSSR === true) return undefined\n\n    const envAPIs = plugin[`${env}APIs`]\n    if (envAPIs && Array.isArray(envAPIs) && envAPIs.length > 0) {\n      return slash(path.join(plugin.resolve, `gatsby-${env}`))\n    }\n    return undefined\n  }\n\n  const ssrPlugins = _.filter(\n    flattenedPlugins.map(plugin => {\n      return {\n        resolve: hasAPIFile(`ssr`, plugin),\n        options: plugin.pluginOptions,\n      }\n    }),\n    plugin => plugin.resolve\n  )\n  const browserPlugins = _.filter(\n    flattenedPlugins.map(plugin => {\n      return {\n        resolve: hasAPIFile(`browser`, plugin),\n        options: plugin.pluginOptions,\n      }\n    }),\n    plugin => plugin.resolve\n  )\n\n  const browserPluginsRequires = browserPlugins\n    .map(\n      plugin =>\n        `{\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n\n  const browserAPIRunner = `module.exports = [${browserPluginsRequires}]\\n`\n\n  let sSRAPIRunner = ``\n\n  try {\n    sSRAPIRunner = fs.readFileSync(`${siteDir}/api-runner-ssr.js`, `utf-8`)\n  } catch (err) {\n    report.panic(`Failed to read ${siteDir}/api-runner-ssr.js`, err)\n  }\n\n  const ssrPluginsRequires = ssrPlugins\n    .map(\n      plugin =>\n        `{\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n  sSRAPIRunner = `var plugins = [${ssrPluginsRequires}]\\n${sSRAPIRunner}`\n\n  fs.writeFileSync(\n    `${siteDir}/api-runner-browser-plugins.js`,\n    browserAPIRunner,\n    `utf-8`\n  )\n  fs.writeFileSync(`${siteDir}/api-runner-ssr.js`, sSRAPIRunner, `utf-8`)\n\n  activity.end()\n  /**\n   * Start the main bootstrap processes.\n   */\n\n  // Source nodes\n  activity = report.activityTimer(`source and transform nodes`)\n  activity.start()\n  await require(`../utils/source-nodes`)()\n  activity.end()\n\n  // Create Schema.\n  activity = report.activityTimer(`building schema`)\n  activity.start()\n  await require(`../schema`)()\n  activity.end()\n\n  // Collect resolvable extensions and attach to program.\n  const extensions = [`.js`, `.jsx`]\n  // Change to this being an action and plugins implement `onPreBootstrap`\n  // for adding extensions.\n  const apiResults = await apiRunnerNode(`resolvableExtensions`, {\n    traceId: `initial-resolvableExtensions`,\n  })\n\n  store.dispatch({\n    type: `SET_PROGRAM_EXTENSIONS`,\n    payload: _.flattenDeep([extensions, apiResults]),\n  })\n\n  const graphqlRunner = (query, context = {}) => {\n    const schema = store.getState().schema\n    return graphql(schema, query, context, context, context)\n  }\n\n  // Collect pages.\n  activity = report.activityTimer(`createPages`)\n  activity.start()\n  await apiRunnerNode(`createPages`, {\n    graphql: graphqlRunner,\n    traceId: `initial-createPages`,\n    waitForCascadingActions: true,\n  })\n  activity.end()\n\n  // A variant on createPages for plugins that want to\n  // have full control over adding/removing pages. The normal\n  // \"createPages\" API is called every time (during development)\n  // that data changes.\n  activity = report.activityTimer(`createPagesStatefully`)\n  activity.start()\n  await apiRunnerNode(`createPagesStatefully`, {\n    graphql: graphqlRunner,\n    traceId: `initial-createPagesStatefully`,\n    waitForCascadingActions: true,\n  })\n  activity.end()\n\n  activity = report.activityTimer(`onPreExtractQueries`)\n  activity.start()\n  await apiRunnerNode(`onPreExtractQueries`)\n  activity.end()\n\n  // Update Schema for SitePage.\n  activity = report.activityTimer(`update schema`)\n  activity.start()\n  await require(`../schema`)()\n  activity.end()\n\n  require(`../schema/type-conflict-reporter`).printConflicts()\n\n  // Extract queries\n  activity = report.activityTimer(`extract queries from components`)\n  activity.start()\n  await extractQueries()\n  activity.end()\n\n  // Start the createPages hot reloader.\n  if (process.env.NODE_ENV !== `production`) {\n    require(`./page-hot-reloader`)(graphqlRunner)\n  }\n\n  // Run queries\n  activity = report.activityTimer(`run graphql queries`)\n  activity.start()\n  await runQueries()\n  activity.end()\n\n  // Write out files.\n  activity = report.activityTimer(`write out page data`)\n  activity.start()\n  try {\n    await writePages()\n  } catch (err) {\n    report.panic(`Failed to write out page data`, err)\n  }\n  activity.end()\n\n  // Write out redirects.\n  activity = report.activityTimer(`write out redirect data`)\n  activity.start()\n  await writeRedirects()\n  activity.end()\n\n  const checkJobsDone = _.debounce(resolve => {\n    const state = store.getState()\n    if (state.jobs.active.length === 0) {\n      report.log(``)\n      report.info(`bootstrap finished - ${process.uptime()} s`)\n      report.log(``)\n\n      // onPostBootstrap\n      activity = report.activityTimer(`onPostBootstrap`)\n      activity.start()\n      apiRunnerNode(`onPostBootstrap`).then(() => {\n        activity.end()\n        resolve({ graphqlRunner })\n      })\n    }\n  }, 100)\n\n  if (store.getState().jobs.active.length === 0) {\n    // onPostBootstrap\n    activity = report.activityTimer(`onPostBootstrap`)\n    activity.start()\n    await apiRunnerNode(`onPostBootstrap`)\n    activity.end()\n\n    report.log(``)\n    report.info(`bootstrap finished - ${process.uptime()} s`)\n    report.log(``)\n    emitter.emit(`BOOTSTRAP_FINISHED`)\n    return { graphqlRunner }\n  } else {\n    return new Promise(resolve => {\n      // Wait until all side effect jobs are finished.\n      emitter.on(`END_JOB`, () => checkJobsDone(resolve))\n    })\n  }\n}\n"],"file":"index.js"}